<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Entrada_stock_procesado extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Entrada_stock_procesado_model');
        $this->load->model('Stock_procesado_model');
    } 

    /*
     * Listing of entrada_stock_procesados
     */
    function index()
    {
        $params['limit'] = 2; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('entrada_stock_procesado/index?');
        $config['total_rows'] = $this->Entrada_stock_procesado_model->get_all_entrada_stock_procesados_count();
        $this->pagination->initialize($config);

        $data['entrada_stock_procesados'] = $this->Entrada_stock_procesado_model->get_all_entrada_stock_procesados($params);
        
        //$this->vistas_index($data);
    }

    /*
     * Adding a new entrada_stock_procesado
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('categoria','Categoria','required');
		$this->form_validation->set_rules('kilos','Kilos','required|numeric');
		$this->form_validation->set_rules('lote','Lote','required');
		$this->form_validation->set_rules('cantidad','Cantidad','numeric');
		
		if($this->form_validation->run()){   

            date_default_timezone_set('America/Mexico_City');
            $now = date('d-m-Y H:i:s');

            $params = array(
				'categoria' => $this->input->post('categoria'),
				'kilos' => $this->input->post('kilos'),
				'lote' => $this->input->post('lote'),
				'cantidad' => $this->input->post('cantidad'),                
                //se encargará de lelvar el stock
                'status' => 'disponible',
                'stock_cantidad' => $this->input->post('cantidad'),
                'stock_kilos' => $this->input->post('kilos'),
                // /se encargará de llevar el stock
                'fecha'=>$now,
                'usuario' => $_SESSION['name']
            );
            
            $entrada_stock_procesado_id = $this->Entrada_stock_procesado_model->add_entrada_stock_procesado($params);

            //$this->vistas_add();
            $msg['success'] = true;
            echo json_encode($msg);
        }
        else
        {            
           
            //$this->vistas_add();
            $msg['success'] = false;
            echo json_encode($msg);

            
        }
    }  
    /*
    *   VERIFICA SI CODIGO YA EXISTE
   
    function codigoExiste($codigo){
        $this->load->model('Entrada_stock_oricesado_model');
        return $this->Entrada_stock_oricesado_model->revisaExistecodigo($codigo);
    } */

    /*
    *   Decrementa Stock
    */
    function decrementa(){

        $id = $this->input->post('id');
        /*
        * Categoria solo recibe:
        *   r3,r4,r5 (string)
        */
        $kilos = $this->input->post('kilos');
        $cantidad = $this->input->post('cantidad');

        $stock = $this->Stock_procesado_model->get_entrada_stock_procesado($id);
        
        $stock_kilos = $stock['stock_kilos'];
        $stock_cantidad = $stock['stock_cantidad'];

        $new_kilos = floatval($stock_kilos) - floatval($kilos);
        $new_cantidad = floatval($stock_cantidad) - floatval($cantidad);

        $params = array(
            'stock_kilos' => $new_kilos,
            'stock_cantidad' => $new_cantidad,
        );

        $this->Stock_procesado_model->update_entrada_stock_procesado($id,$params);  

        $stock = $this->Stock_procesado_model->get_stock_procesado($categoria);
        $msg['success'] = true;
        $msg['pollo'] = $stock;
        echo json_encode($msg);
    }

    //carga vistas Add
    function vistas_add(){
        $this->load->view('header_view');
        $this->load->view('entrada_stock_procesado/menu_top');
        $this->load->view('menu_left_view');
        $this->load->view('entrada_stock_procesado/add');
        $this->load->view('entrada_stock_procesado/footer_view');
    }
    function vistas_index($data){
        $this->load->view('header_view');
        $this->load->view('entrada_stock_procesado/menu_top');
        $this->load->view('menu_left_view');
        $this->load->view('entrada_stock_procesado/index',$data);
        $this->load->view('entrada_stock_procesado/footer_view');
    }



    /*
     * Editing a entrada_stock_procesado
     */
    function edit($id)
    {   
        // check if the entrada_stock_procesado exists before trying to edit it
        $data['entrada_stock_procesado'] = $this->Entrada_stock_procesado_model->get_entrada_stock_procesado($id);
        
        if(isset($data['entrada_stock_procesado']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('categoria','Categoria','required');
			$this->form_validation->set_rules('kilos','Kilos','required|numeric');
			$this->form_validation->set_rules('lote','Lote','required');
			$this->form_validation->set_rules('cantidad','Cantidad','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'categoria' => $this->input->post('categoria'),
					'kilos' => $this->input->post('kilos'),
					'lote' => $this->input->post('lote'),
					'cantidad' => $this->input->post('cantidad'),
					'fecha' => $this->input->post('fecha'),
					'usuario' => $this->input->post('usuario'),
                );

                $this->Entrada_stock_procesado_model->update_entrada_stock_procesado($id,$params);            
                redirect('entrada_stock_procesado/index');
            }
            else
            {
                $data['_view'] = 'entrada_stock_procesado/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The entrada_stock_procesado you are trying to edit does not exist.');
    } 

    /*
     * Deleting entrada_stock_procesado
     */
    function remove($id)
    {
        $entrada_stock_procesado = $this->Entrada_stock_procesado_model->get_entrada_stock_procesado($id);

        // check if the entrada_stock_procesado exists before trying to delete it
        if(isset($entrada_stock_procesado['id']))
        {
            $this->Entrada_stock_procesado_model->delete_entrada_stock_procesado($id);
            redirect('entrada_stock_procesado/index');
        }
        else
            show_error('The entrada_stock_procesado you are trying to delete does not exist.');
    }

    /*
     * Adding a new stock_procesado por CODIGO de BARRAS
     */
    function addByCode(){   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = $this->input->post('arreglo');
            
            $stock_procesado_success = $this->Entrada_stock_procesado_model->add_stock_procesado_by_code($params);

            $msg['success'] = $stock_procesado_success;
            
            echo json_encode($msg);
        }
        else
        {            
            
        }
    } 
    
}

